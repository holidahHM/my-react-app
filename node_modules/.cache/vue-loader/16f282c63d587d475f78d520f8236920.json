{"remainingRequest":"/home/mulama/Desktop/NewFolder/osl/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/home/mulama/Desktop/NewFolder/osl/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/mulama/Desktop/NewFolder/osl/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/mulama/Desktop/NewFolder/osl/src/views/Sites/onboarding/Corporate/Trust/Hakikisha_Trust_Setup.vue?vue&type=template&id=32609016&","dependencies":[{"path":"/home/mulama/Desktop/NewFolder/osl/src/views/Sites/onboarding/Corporate/Trust/Hakikisha_Trust_Setup.vue","mtime":1626848600966},{"path":"/home/mulama/Desktop/NewFolder/osl/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/mulama/Desktop/NewFolder/osl/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/home/mulama/Desktop/NewFolder/osl/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/mulama/Desktop/NewFolder/osl/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}