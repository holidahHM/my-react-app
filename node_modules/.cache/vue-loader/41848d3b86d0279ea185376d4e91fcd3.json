{"remainingRequest":"/home/mulama/Desktop/Management/mgt2/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/home/mulama/Desktop/Management/mgt2/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/mulama/Desktop/Management/mgt2/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/mulama/Desktop/Management/mgt2/src/views/Pages/BD/meetingCard.vue?vue&type=template&id=66f8abfa&","dependencies":[{"path":"/home/mulama/Desktop/Management/mgt2/src/views/Pages/BD/meetingCard.vue","mtime":1628485261041},{"path":"/home/mulama/Desktop/Management/mgt2/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/mulama/Desktop/Management/mgt2/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/home/mulama/Desktop/Management/mgt2/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/mulama/Desktop/Management/mgt2/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}