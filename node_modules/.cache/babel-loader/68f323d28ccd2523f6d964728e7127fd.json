{"remainingRequest":"/home/mulama/Desktop/NewFolder/osl/node_modules/babel-loader/lib/index.js!/home/mulama/Desktop/NewFolder/osl/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/mulama/Desktop/NewFolder/osl/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/mulama/Desktop/NewFolder/osl/src/views/Sites/Servicing/Schemes/insured_items.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/mulama/Desktop/NewFolder/osl/src/views/Sites/Servicing/Schemes/insured_items.vue","mtime":1626858505683},{"path":"/home/mulama/Desktop/NewFolder/osl/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/mulama/Desktop/NewFolder/osl/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/mulama/Desktop/NewFolder/osl/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/mulama/Desktop/NewFolder/osl/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUiOwppbXBvcnQgX2FzeW5jVG9HZW5lcmF0b3IgZnJvbSAiL2hvbWUvbXVsYW1hL0Rlc2t0b3AvTmV3Rm9sZGVyL29zbC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUtY29yZWpzMi9oZWxwZXJzL2VzbS9hc3luY1RvR2VuZXJhdG9yIjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IHsgZ2V0QWxsSW5zdXJlZEl0ZW1zIH0gZnJvbSAiLi4vLi4vLi4vLi4vYXBpL3VzZXJzLmFwaSI7CmV4cG9ydCBkZWZhdWx0IHsKICBjb21wb25lbnRzOiB7fSwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgcm93czogMTAwLAogICAgICBwZXJQYWdlOiAxLAogICAgICBjdXJyZW50UGFnZTogMSwKICAgICAgaXRlbXM6IFtdLAogICAgICBzZWxlY3RBbGw6IFtdCiAgICB9OwogIH0sCiAgLy8gICBjb21wdXRlZDp7CiAgLy8gICAgIHVzZXJfTmFtZTpmdW5jdGlvbigpewogIC8vICAgICAgIHJldHVybiB0aGlzLmlfZl9uYW1lICsoJy4nKSsgdGhpcy5pX2xfbmFtZTsKICAvLyAgICAgfQogIC8vICAgfSwKICBtZXRob2RzOiB7CiAgICB1cGRhdGVQcm9maWxlOiBmdW5jdGlvbiB1cGRhdGVQcm9maWxlKCkgewogICAgICBhbGVydCgiWW91ciBkYXRhOiAiICsgSlNPTi5zdHJpbmdpZnkodGhpcy5wcm9zcGVjdCkpOwogICAgfSwKICAgIHNlbGVjdDogZnVuY3Rpb24gc2VsZWN0KCkgewogICAgICBmb3IgKHZhciBpIGluIHRoaXMuaXRlbXMpIHsKICAgICAgICB0aGlzLnNlbGVjdGVkLnB1c2godGhpcy5pdGVtc1tpXS5tZW1iZXJfaWQpOwogICAgICB9CiAgICB9CiAgfSwKICBtb3VudGVkOiBmdW5jdGlvbiAoKSB7CiAgICB2YXIgX21vdW50ZWQgPSBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUoKSB7CiAgICAgIHZhciByZXNwb25zZTsKICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgIGlmIChsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgidmlld0luc3VyZWRJdGVtcyIpICE9IG51bGwpIHsKICAgICAgICAgICAgICAgIHRoaXMuaXRlbXMgPSBKU09OLnBhcnNlKGxvY2FsU3RvcmFnZS5nZXRJdGVtKCJ2aWV3SW5zdXJlZEl0ZW1zIikpOwogICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgX2NvbnRleHQucHJldiA9IDE7CiAgICAgICAgICAgICAgcmVzcG9uc2UgPSAiIjsKICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gNTsKICAgICAgICAgICAgICByZXR1cm4gZ2V0QWxsSW5zdXJlZEl0ZW1zKCk7CgogICAgICAgICAgICBjYXNlIDU6CiAgICAgICAgICAgICAgcmVzcG9uc2UgPSBfY29udGV4dC5zZW50OwogICAgICAgICAgICAgIGNvbnNvbGUubG9nKHJlc3BvbnNlLmRhdGEpOwogICAgICAgICAgICAgIHRoaXMuaXRlbXMgPSByZXNwb25zZS5kYXRhLmRhdGE7CiAgICAgICAgICAgICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oInZpZXdJbnN1cmVkSXRlbXMiLCBKU09OLnN0cmluZ2lmeShyZXNwb25zZS5kYXRhLmRhdGEpKTsKICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMTM7CiAgICAgICAgICAgICAgYnJlYWs7CgogICAgICAgICAgICBjYXNlIDExOgogICAgICAgICAgICAgIF9jb250ZXh0LnByZXYgPSAxMTsKICAgICAgICAgICAgICBfY29udGV4dC50MCA9IF9jb250ZXh0WyJjYXRjaCJdKDEpOwoKICAgICAgICAgICAgY2FzZSAxMzoKICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSwgX2NhbGxlZSwgdGhpcywgW1sxLCAxMV1dKTsKICAgIH0pKTsKCiAgICBmdW5jdGlvbiBtb3VudGVkKCkgewogICAgICByZXR1cm4gX21vdW50ZWQuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKICAgIH0KCiAgICByZXR1cm4gbW91bnRlZDsKICB9KCkKfTs="},{"version":3,"sources":["insured_items.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiEA,SAAA,kBAAA;AAEA,eAAA;AACA,EAAA,UAAA,EAAA,EADA;AAEA,EAAA,IAFA,kBAEA;AACA,WAAA;AACA,MAAA,IAAA,EAAA,GADA;AAEA,MAAA,OAAA,EAAA,CAFA;AAGA,MAAA,WAAA,EAAA,CAHA;AAIA,MAAA,KAAA,EAAA,EAJA;AAKA,MAAA,SAAA,EAAA;AALA,KAAA;AAOA,GAVA;AAWA;AACA;AACA;AACA;AACA;AACA,EAAA,OAAA,EAAA;AACA,IAAA,aADA,2BACA;AACA,MAAA,KAAA,CAAA,gBAAA,IAAA,CAAA,SAAA,CAAA,KAAA,QAAA,CAAA,CAAA;AACA,KAHA;AAIA,IAAA,MAJA,oBAIA;AACA,WAAA,IAAA,CAAA,IAAA,KAAA,KAAA,EAAA;AACA,aAAA,QAAA,CAAA,IAAA,CAAA,KAAA,KAAA,CAAA,CAAA,EAAA,SAAA;AACA;AACA;AARA,GAhBA;AA2BA,EAAA,OA3BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA4BA,kBAAA,YAAA,CAAA,OAAA,CAAA,kBAAA,KAAA,IAAA,EAAA;AACA,qBAAA,KAAA,GAAA,IAAA,CAAA,KAAA,CAAA,YAAA,CAAA,OAAA,CAAA,kBAAA,CAAA,CAAA;AACA;;AA9BA;AAgCA,cAAA,QAhCA,GAgCA,EAhCA;AAAA;AAAA,qBAiCA,kBAAA,EAjCA;;AAAA;AAiCA,cAAA,QAjCA;AAkCA,cAAA,OAAA,CAAA,GAAA,CAAA,QAAA,CAAA,IAAA;AACA,mBAAA,KAAA,GAAA,QAAA,CAAA,IAAA,CAAA,IAAA;AACA,cAAA,YAAA,CAAA,OAAA,CAAA,kBAAA,EAAA,IAAA,CAAA,SAAA,CAAA,QAAA,CAAA,IAAA,CAAA,IAAA,CAAA;AApCA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,CAAA","sourcesContent":["<template>\n  <base-header class=\"pb-6 pb-8 pt-5 pt-md-8 bg-gradient-success\">\n    <card>\n      <div style=\"overflow: scroll\">\n        <b-row>\n          <b-col xl=\"6\">\n            <table class=\"table table-stripped\">\n              <thead class=\"thead-light\">\n                <tr>\n                  <th scope=\"col\">Check Box</th>\n                  <th scope=\"col\">Name</th>\n                  <th scope=\"col\">Code</th>\n                  <th scope=\"col\">Descriptions</th>\n                  <th scope=\"col\">Items</th>\n                  <th scope=\"col\">Telephone</th>\n                  <th scope=\"col\">Occupation</th>\n                  <th scope=\"col\">Action</th>\n                </tr>\n              </thead>\n              <tbody id=\"myTable\">\n                <tr v-for=\"i in items\">\n                  <td>\n                    <label class=\"form-checkbox\">\n                      <input type=\"checkbox\" :value=\"i.ClientID\" v-model=\"selected\" />\n                      <i class=\"form-icon\"></i>\n                    </label>\n                  </td>\n                  <td>{{ i.Name }}</td>\n                  <td>{{ i.code }}</td>\n                  <td>{{ i.Description }}</td>\n                  <td>{{ i.Items }}</td>\n                  <td>{{ i.Tel }}</td>\n                  <td>{{ i.Occupation }}</td>\n\n                  <td>\n                    <b-dropdown\n                      id=\"dropdown-left\"\n                      text=\"Action\"\n                      variant=\"primary\"\n                      class=\"m-2\"\n                    >\n                      <b-dropdown-item href=\"#Member_Edits\">Edit</b-dropdown-item>\n                      <b-dropdown-item href=\"#/Members\">Open</b-dropdown-item>\n                      <b-dropdown-item href=\"#\">Delete</b-dropdown-item>\n                    </b-dropdown>\n                  </td>\n                </tr>\n              </tbody>\n            </table>\n            <div>\n              <b-pagination\n                v-model=\"currentPage\"\n                :total-rows=\"rows\"\n                :per-page=\"perPage\"\n                first-number\n              ></b-pagination>\n            </div>\n          </b-col>\n        </b-row>\n      </div>\n    </card>\n  </base-header>\n</template>\n\n<script>\nimport { getAllInsuredItems } from \"../../../../api/users.api\";\n\nexport default {\n  components: {},\n  data() {\n    return {\n      rows: 100,\n      perPage: 1,\n      currentPage: 1,\n      items: [],\n      selectAll: [],\n    };\n  },\n  //   computed:{\n  //     user_Name:function(){\n  //       return this.i_f_name +('.')+ this.i_l_name;\n  //     }\n  //   },\n  methods: {\n    updateProfile() {\n      alert(\"Your data: \" + JSON.stringify(this.prospect));\n    },\n    select() {\n      for (let i in this.items) {\n        this.selected.push(this.items[i].member_id);\n      }\n    },\n  },\n\n  async mounted() {\n    if (localStorage.getItem(\"viewInsuredItems\") != null) {\n      this.items = JSON.parse(localStorage.getItem(\"viewInsuredItems\"));\n    }\n    try {\n      let response = \"\";\n      response = await getAllInsuredItems();\n      console.log(response.data);\n      this.items = response.data.data;\n      localStorage.setItem(\"viewInsuredItems\", JSON.stringify(response.data.data));\n    } catch (e) {}\n  },\n};\n</script>\n"],"sourceRoot":"src/views/Sites/Servicing/Schemes"}]}