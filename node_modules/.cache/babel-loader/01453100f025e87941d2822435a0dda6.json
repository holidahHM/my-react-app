{"remainingRequest":"/home/mulama/Desktop/NewFolder/osl/node_modules/babel-loader/lib/index.js!/home/mulama/Desktop/NewFolder/osl/node_modules/eslint-loader/index.js??ref--13-0!/home/mulama/Desktop/NewFolder/osl/src/service/insuranceErrors.js","dependencies":[{"path":"/home/mulama/Desktop/NewFolder/osl/src/service/insuranceErrors.js","mtime":1628485261037},{"path":"/home/mulama/Desktop/NewFolder/osl/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/mulama/Desktop/NewFolder/osl/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/mulama/Desktop/NewFolder/osl/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9jbGFzc0NhbGxDaGVjayBmcm9tICIvaG9tZS9tdWxhbWEvRGVza3RvcC9OZXdGb2xkZXIvb3NsL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS1jb3JlanMyL2hlbHBlcnMvZXNtL2NsYXNzQ2FsbENoZWNrIjsKaW1wb3J0IF9jcmVhdGVDbGFzcyBmcm9tICIvaG9tZS9tdWxhbWEvRGVza3RvcC9OZXdGb2xkZXIvb3NsL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS1jb3JlanMyL2hlbHBlcnMvZXNtL2NyZWF0ZUNsYXNzIjsKaW1wb3J0IF9kZWZpbmVQcm9wZXJ0eSBmcm9tICIvaG9tZS9tdWxhbWEvRGVza3RvcC9OZXdGb2xkZXIvb3NsL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS1jb3JlanMyL2hlbHBlcnMvZXNtL2RlZmluZVByb3BlcnR5IjsKCnZhciBpbnN1cmFuY2VFcnJvcnMgPSAvKiNfX1BVUkVfXyovZnVuY3Rpb24gKCkgewogIGZ1bmN0aW9uIGluc3VyYW5jZUVycm9ycygpIHsKICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBpbnN1cmFuY2VFcnJvcnMpOwogIH0KCiAgX2NyZWF0ZUNsYXNzKGluc3VyYW5jZUVycm9ycywgbnVsbCwgW3sKICAgIGtleTogImFkZERhdGUiLAogICAgdmFsdWU6IGZ1bmN0aW9uIGFkZERhdGUoZW5kZGF0ZSwgZGF5cykgewogICAgICB2YXIgcmVzdWx0ID0gbmV3IERhdGUoZW5kZGF0ZSk7CiAgICAgIHJlc3VsdC5zZXREYXRlKHJlc3VsdC5nZXREYXRlKCkgLSBkYXlzKTsKICAgICAgcmV0dXJuIHJlc3VsdC50b0RhdGVTdHJpbmcoKTsKICAgIH0KICB9LCB7CiAgICBrZXk6ICJnZXRFcnJvck1lc3NhZ2VzIiwKICAgIHZhbHVlOiBmdW5jdGlvbiBnZXRFcnJvck1lc3NhZ2VzKGVyckNvZGUpIHsKICAgICAgc3dpdGNoIChlcnJDb2RlKSB7CiAgICAgICAgY2FzZSA0MDE6CiAgICAgICAgICByZXR1cm4gJ0ZhaWxlZCEgcGxlYXNlIGlucHV0IHByb2R1Y3QgbmFtZSc7CgogICAgICAgIGNhc2UgNDAyOgogICAgICAgICAgcmV0dXJuICdGYWlsZWQhIERhdGEgZXhpc3RzIGluIHRoZSBkYXRhYmFzZSc7CgogICAgICAgIGNhc2UgNDAzOgogICAgICAgICAgcmV0dXJuICdGYWlsZWQhIGludmFsaWQgZGF0YSB0eXBlcyc7CgogICAgICAgIGRlZmF1bHQ6CiAgICAgICAgICByZXR1cm4gJ3VuZXhwZWN0ZWQgZXJyb3InOwogICAgICB9CiAgICB9CiAgfSwgewogICAga2V5OiAiZ2V0RXJyb3JJbnRlcm5hbFVzZXIiLAogICAgdmFsdWU6IGZ1bmN0aW9uIGdldEVycm9ySW50ZXJuYWxVc2VyKGVycm9yQ29kZSkgewogICAgICBzd2l0Y2ggKGVycm9yQ29kZSkgewogICAgICAgIGNhc2UgNDAxOgogICAgICAgICAgcmV0dXJuICdGYWlsZWQhIHBsZWFzZSBpbnB1dCB1c2VybmFtZSc7CgogICAgICAgIGNhc2UgNDAyOgogICAgICAgICAgcmV0dXJuICdGYWlsZWQhIERhdGEgZXhpc3RzIGluIHRoZSBkYXRhYmFzZSc7CgogICAgICAgIGNhc2UgNDAzOgogICAgICAgICAgcmV0dXJuICdGYWlsZWQhIGludmFsaWQgZGF0YSB0eXBlcyc7CgogICAgICAgIGRlZmF1bHQ6CiAgICAgICAgICByZXR1cm4gJ3VuZXhwZWN0ZWQgZXJyb3InOwogICAgICB9CiAgICB9CiAgfSwgewogICAga2V5OiAiZ2V0RXJyb3JFeHRlcm5hbFVzZXIiLAogICAgdmFsdWU6IGZ1bmN0aW9uIGdldEVycm9yRXh0ZXJuYWxVc2VyKGVycm9yQ29kZXMpIHsKICAgICAgc3dpdGNoIChlcnJvckNvZGVzKSB7CiAgICAgICAgY2FzZSA0MDE6CiAgICAgICAgICByZXR1cm4gJ0ZhaWxlZCEgcGxlYXNlIGlucHV0IHVzZXJuYW1lJzsKCiAgICAgICAgY2FzZSA0MDI6CiAgICAgICAgICByZXR1cm4gJ0ZhaWxlZCEgRGF0YSBleGlzdHMgaW4gdGhlIGRhdGFiYXNlJzsKCiAgICAgICAgY2FzZSA0MDM6CiAgICAgICAgICByZXR1cm4gJ0ZhaWxlZCEgaW52YWxpZCBkYXRhIHR5cGVzJzsKCiAgICAgICAgZGVmYXVsdDoKICAgICAgICAgIHJldHVybiAndW5leHBlY3RlZCBlcnJvcic7CiAgICAgIH0KICAgIH0KICB9LCB7CiAgICBrZXk6ICJnZXRFcnJvcnNMZWFkcyIsCiAgICB2YWx1ZTogZnVuY3Rpb24gZ2V0RXJyb3JzTGVhZHMoZXJyb3JDb2RlTGVhZCkgewogICAgICBzd2l0Y2ggKGVycm9yQ29kZUxlYWQpIHsKICAgICAgICBjYXNlIDQwMToKICAgICAgICAgIHJldHVybiAnRmFpbGVkISBwbGVhc2UgbGVhZCBuYW1lJzsKCiAgICAgICAgY2FzZSA0MDI6CiAgICAgICAgICByZXR1cm4gJ0ZhaWxlZCEgRGF0YSBleGlzdHMgaW4gdGhlIGRhdGFiYXNlJzsKCiAgICAgICAgY2FzZSA0MDM6CiAgICAgICAgICByZXR1cm4gJ2ZhaWxlZCB0byByZWdpc3RlciBsZWFkIGJlY2F1c2UgYSBsZWFkIHdpdGggdGhlIHNhbWUgbmFtZSBhbHJlYWR5IGV4aXN0cyc7CgogICAgICAgIGRlZmF1bHQ6CiAgICAgICAgICByZXR1cm4gJ3VuZXhwZWN0ZWQgZXJyb3InOwogICAgICB9CiAgICB9CiAgfSwgewogICAga2V5OiAiZ2V0RXJyb3JzUHJvc3BlY3RzIiwKICAgIHZhbHVlOiBmdW5jdGlvbiBnZXRFcnJvcnNQcm9zcGVjdHMoZXJyb3JDb2RlUHJvc3BlY3RzKSB7CiAgICAgIHN3aXRjaCAoZXJyb3JDb2RlUHJvc3BlY3RzKSB7CiAgICAgICAgY2FzZSA0MDE6CiAgICAgICAgICByZXR1cm4gJ1Byb3NwZWN0IHJlZ2lzdHJhdGlvbiBmYWlsZWQuIFBsZWFzZSBpbnB1dCBwcm9zcGVjdG5hbWUgJzsKCiAgICAgICAgY2FzZSA0MDI6CiAgICAgICAgICByZXR1cm4gJ0ZhaWxlZCEgaW52YWxpZCBkYXRhIHR5cGVzJzsKCiAgICAgICAgY2FzZSA0MDM6CiAgICAgICAgICByZXR1cm4gJ2ZhaWxlZCB0byByZWdpc3RlciBwcm9zcGVjdCBiZWNhdXNlIGEgcHJvc3BlY3Qgd2l0aCB0aGUgc2FtZSBuYW1lIGFscmVhZHkgZXhpc3RzJzsKCiAgICAgICAgZGVmYXVsdDoKICAgICAgICAgIHJldHVybiAndW5leHBlY3RlZCBlcnJvcic7CiAgICAgIH0KICAgIH0KICB9LCB7CiAgICBrZXk6ICJnZXRSZXF1ZXN0UGFyYW1zIiwKICAgIHZhbHVlOiBmdW5jdGlvbiBnZXRSZXF1ZXN0UGFyYW1zKHNlYXJjaFRpdGxlLCBzZWxMaW1pdCwgc3RhdHVzKSB7CiAgICAgIHZhciBwYXJhbXMgPSB7fTsKCiAgICAgIGlmIChzZWFyY2hUaXRsZSkgewogICAgICAgIHBhcmFtc1sicSJdID0gc2VhcmNoVGl0bGU7CiAgICAgIH0KCiAgICAgIGlmIChzZWxMaW1pdCkgewogICAgICAgIHBhcmFtc1sibGltaXQiXSA9IHNlbExpbWl0OwogICAgICB9CgogICAgICBpZiAoc3RhdHVzKSB7CiAgICAgICAgcGFyYW1zWyJjbGFpbV9zdGF0dXMiXSA9IHN0YXR1czsKICAgICAgfQoKICAgICAgcmV0dXJuIHBhcmFtczsKICAgIH0KICB9LCB7CiAgICBrZXk6ICJnZXRSZXF1ZXN0UGFyYW1zX1VzZXJzIiwKICAgIHZhbHVlOiBmdW5jdGlvbiBnZXRSZXF1ZXN0UGFyYW1zX1VzZXJzKEpzb25GaWxlKSB7CiAgICAgIHZhciBwYXJhbXMgPSB7fTsKCiAgICAgIGlmIChKc29uRmlsZSkgewogICAgICAgIHBhcmFtc1sianNvbiJdID0gSnNvbkZpbGU7CiAgICAgIH0KCiAgICAgIHJldHVybiBwYXJhbXM7CiAgICB9CiAgfV0pOwoKICByZXR1cm4gaW5zdXJhbmNlRXJyb3JzOwp9KCk7CgpfZGVmaW5lUHJvcGVydHkoaW5zdXJhbmNlRXJyb3JzLCAiZGF0ZV9kaWZmX2luZGF5cyIsIGZ1bmN0aW9uIChkYXRlMSwgZGF0ZTIpIHsKICB2YXIgZHQxID0gbmV3IERhdGUoZGF0ZTEpOwogIHZhciBkdDIgPSBuZXcgRGF0ZShkYXRlMik7CiAgcmV0dXJuIE1hdGguZmxvb3IoKERhdGUuVVRDKGR0Mi5nZXRGdWxsWWVhcigpLCBkdDIuZ2V0TW9udGgoKSwgZHQyLmdldERhdGUoKSkgLSBEYXRlLlVUQyhkdDEuZ2V0RnVsbFllYXIoKSwgZHQxLmdldE1vbnRoKCksIGR0MS5nZXREYXRlKCkpKSAvICgxMDAwICogNjAgKiA2MCAqIDI0KSk7Cn0pOwoKX2RlZmluZVByb3BlcnR5KGluc3VyYW5jZUVycm9ycywgImRlcGVuZGFudHNBZ2VMaW1pdCIsIGZ1bmN0aW9uIChkYXRlMSkgewogIHZhciBjdXJyRGF0ZSA9IG5ldyBEYXRlKCk7CiAgdmFyIGR0MSA9IG5ldyBEYXRlKGRhdGUxKTsKICByZXR1cm4gTWF0aC5mbG9vcigoRGF0ZS5VVEMoY3VyckRhdGUuZ2V0RnVsbFllYXIoKSwgY3VyckRhdGUuZ2V0TW9udGgoKSwgY3VyckRhdGUuZ2V0RGF0ZSgpKSAtIERhdGUuVVRDKGR0MS5nZXRGdWxsWWVhcigpLCBkdDEuZ2V0TW9udGgoKSwgZHQxLmdldERhdGUoKSkpIC8gKDEwMDAgKiA2MCAqIDYwICogMjQpKTsKfSk7CgpfZGVmaW5lUHJvcGVydHkoaW5zdXJhbmNlRXJyb3JzLCAiY2FsY01lZENvdmVyUXVvdGUiLCBmdW5jdGlvbiAoc2VsZWN0ZWRDb3ZlcikgewogIHJldHVybiBzZWxlY3RlZENvdmVyICogMTI7Cn0pOwoKX2RlZmluZVByb3BlcnR5KGluc3VyYW5jZUVycm9ycywgImJhbGFuY2VDRiIsIGZ1bmN0aW9uIChiYXNpY1ByZW1pdW0sIGR1ZVByZW1pdW0sIGFtb3VudFBhaWQpIHsKICB2YXIgeCA9IChiYXNpY1ByZW1pdW0gKiAxMDAwMCAtIGR1ZVByZW1pdW0gKiAxMDAwMCArIGFtb3VudFBhaWQgKiAxMDAwMCAtIGJhc2ljUHJlbWl1bSAqIDEwMDAwKSAvIDEwMDAwOwogIHJldHVybiB4Owp9KTsKCl9kZWZpbmVQcm9wZXJ0eShpbnN1cmFuY2VFcnJvcnMsICJwYWlkdG9JbnN1cmVyIiwgZnVuY3Rpb24gKFBfY29tbWlzc2lvbiwgYmFzaWNQcmVtaXVtLCBXdGF4LCBkdWVQcmVtaXVtKSB7CiAgLy8gbGV0IHN0YW1wZHV0eSA9IDA7CiAgLy8gbGV0IHRyYWluaW5nTGV2aSA9IDU2OwogIC8vIGxldCBwb2xpY3lIQ0YgPSA3MDsKICAvLyBsZXQgc3RhdHVvcnlDaGFyZ2VzID0gKHN0YW1wZHV0eSArIHRyYWluaW5nTGV2aSArIHBvbGljeUhDRik7CiAgLy8gbGV0IG90aGVyQ2hhcmdlcyA9IDA7CiAgLy8gbGV0IHBvbGljeUNoYXJnZXMgPSAwOwogIC8vIGxldCBicm9ja2VyRGlzY291bnQgPSAwOwogIC8vIGxldCBBZGRpdGlvbmFsQ2hhcmdlcyA9IChvdGhlckNoYXJnZXMgKyBwb2xpY3lDaGFyZ2VzICsgYnJvY2tlckRpc2NvdW50KTsKICAvLyBsZXQgeiA9IHN0YXR1b3J5Q2hhcmdlcyArIEFkZGl0aW9uYWxDaGFyZ2VzOwogIC8vIGxldCBmaW5kZHVlUCA9IGJhc2ljUHJlbWl1bSArIHo7CiAgdmFyIHggPSBQX2NvbW1pc3Npb24gLyAxMDAgKiBiYXNpY1ByZW1pdW07CiAgdmFyIHkgPSBXdGF4IC8gMTAwICogeDsKICB2YXIgbmV0Q29tbWlzc2lvbiA9IHggLSB5OwogIHZhciBwYWlkdG9JbnN1cmVyZnVuYyA9IGR1ZVByZW1pdW0gLSBuZXRDb21taXNzaW9uOwogIHJldHVybiBwYWlkdG9JbnN1cmVyZnVuYzsKfSk7CgpfZGVmaW5lUHJvcGVydHkoaW5zdXJhbmNlRXJyb3JzLCAiYWxsb2NhdGVkQW1vdW50IiwgZnVuY3Rpb24gKGFsbG9jYXRlZEFtdCwgQWNjb3VudEJhbCkgewogIHZhciB4ID0gQWNjb3VudEJhbCAtIGFsbG9jYXRlZEFtdDsKICByZXR1cm4geDsKfSk7CgpleHBvcnQgeyBpbnN1cmFuY2VFcnJvcnMgYXMgZGVmYXVsdCB9Ow=="},{"version":3,"sources":["/home/mulama/Desktop/NewFolder/osl/src/service/insuranceErrors.js"],"names":["insuranceErrors","enddate","days","result","Date","setDate","getDate","toDateString","errCode","errorCode","errorCodes","errorCodeLead","errorCodeProspects","searchTitle","selLimit","status","params","JsonFile","date1","date2","dt1","dt2","Math","floor","UTC","getFullYear","getMonth","currDate","selectedCover","basicPremium","duePremium","amountPaid","x","P_commission","Wtax","y","netCommission","paidtoInsurerfunc","allocatedAmt","AccountBal"],"mappings":"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","sourcesContent":["export default class insuranceErrors{\n    static addDate(enddate, days) {\n        var result = new Date(enddate);\n        result.setDate(result.getDate() - days);\n        return result.toDateString();\n    }\n\n    static getErrorMessages(errCode) {\n        switch (errCode) {\n            case 401:\n                return 'Failed! please input product name';\n            case 402:\n                return 'Failed! Data exists in the database';\n            case 403:\n                return 'Failed! invalid data types';\n            default:\n                return 'unexpected error';\n        }\n    }\n    static getErrorInternalUser(errorCode) {\n        switch (errorCode) {\n            case 401:\n                return 'Failed! please input username';\n            case 402:\n                return 'Failed! Data exists in the database';\n            case 403:\n                return 'Failed! invalid data types';\n            default:\n                return 'unexpected error';\n        }\n    }\n\n    static getErrorExternalUser(errorCodes){\n        switch (errorCodes) {\n            case 401:\n                return 'Failed! please input username';\n            case 402:\n                return 'Failed! Data exists in the database';\n            case 403:\n                return 'Failed! invalid data types';\n            default:\n                return 'unexpected error';\n        }\n    }\n\n    static getErrorsLeads(errorCodeLead){\n        switch (errorCodeLead) {\n            case 401:\n                return 'Failed! please lead name';\n            case 402:\n                return 'Failed! Data exists in the database';\n            case 403:\n                return 'failed to register lead because a lead with the same name already exists';\n            default:\n                return 'unexpected error';\n        }\n    }\n\n    static getErrorsProspects(errorCodeProspects){\n        switch (errorCodeProspects) {\n            case 401:\n                return 'Prospect registration failed. Please input prospectname ';\n            case 402:\n                return 'Failed! invalid data types';\n            case 403:\n                return 'failed to register prospect because a prospect with the same name already exists';\n            default:\n                return 'unexpected error';\n        }\n    }\n    static getRequestParams(searchTitle, selLimit, status) {\n      let params = {};\n\n      if (searchTitle) {\n        params[\"q\"] = searchTitle;\n      }\n\n      if (selLimit) {\n        params[\"limit\"] = selLimit;\n      }\n      if (status) {\n          params[\"claim_status\"] = status;\n      }\n\n      return params;\n    }\n    static getRequestParams_Users(JsonFile) {\n      let params = {};\n      if (JsonFile) {\n        params[\"json\"] = JsonFile;\n      }\n      return params;\n    }\n\n    static date_diff_indays = function(date1, date2) {\n        const dt1 = new Date(date1);\n        const dt2 = new Date(date2);\n        return Math.floor(\n            (Date.UTC(dt2.getFullYear(), dt2.getMonth(), dt2.getDate()) -\n                Date.UTC(dt1.getFullYear(), dt1.getMonth(), dt1.getDate())) / (1000 * 60 * 60 * 24));\n    }\n    static dependantsAgeLimit = function (date1) {\n        const currDate = new Date();\n        const dt1 = new Date(date1);\n        return Math.floor(\n            (Date.UTC(currDate.getFullYear(), currDate.getMonth(), currDate.getDate()) -\n                Date.UTC(dt1.getFullYear(), dt1.getMonth(), dt1.getDate())) / (1000 * 60 * 60 * 24));\n    }\n    static calcMedCoverQuote = function (selectedCover) {\n        return selectedCover * 12;\n    }\n\n    static balanceCF = function(basicPremium, duePremium, amountPaid) {\n        let x = (((basicPremium * 10000 - duePremium * 10000) + amountPaid * 10000) - basicPremium * 10000) / 10000;\n        return x;\n    }\n\n    static paidtoInsurer = function (P_commission, basicPremium, Wtax, duePremium) {\n        // let stampduty = 0;\n        // let trainingLevi = 56;\n        // let policyHCF = 70;\n        // let statuoryCharges = (stampduty + trainingLevi + policyHCF);\n\n        // let otherCharges = 0;\n        // let policyCharges = 0;\n        // let brockerDiscount = 0;\n        // let AdditionalCharges = (otherCharges + policyCharges + brockerDiscount);\n\n        // let z = statuoryCharges + AdditionalCharges;\n\n        // let finddueP = basicPremium + z;\n\n        let x = (P_commission / 100) * basicPremium;\n        let y = (Wtax / 100) * x; \n        let netCommission = x - y;\n\n        let paidtoInsurerfunc = duePremium - netCommission;\n        return   paidtoInsurerfunc\n    }\n    static allocatedAmount = function (allocatedAmt, AccountBal) {\n        \n        let x = AccountBal - allocatedAmt;\n        return x;\n     \n    }\n    \n}"]}]}