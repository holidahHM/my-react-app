{"remainingRequest":"/home/mulama/Desktop/NewFolder/osl/node_modules/babel-loader/lib/index.js!/home/mulama/Desktop/NewFolder/osl/node_modules/eslint-loader/index.js??ref--13-0!/home/mulama/Desktop/NewFolder/osl/src/api/users.api.js","dependencies":[{"path":"/home/mulama/Desktop/NewFolder/osl/src/api/users.api.js","mtime":1627297184080},{"path":"/home/mulama/Desktop/NewFolder/osl/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/mulama/Desktop/NewFolder/osl/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/mulama/Desktop/NewFolder/osl/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/home/mulama/Desktop/NewFolder/osl/src/api/users.api.js"],"names":["httpClient","LOGIN_END_POINT","SETTINGS_END_POINT","COUNTRIES_INSURANCE_END_POINT","PRODUCT_INSURANCE_CATEGORY_END_POINT","SERVICE_INSURANCE_CATEGORY_END_POINT","SERVICE_INSURANCE_PROVIDER_END_POINT","SAVE_INSURANCE_END_POINT","ALL_USERS_END_POINT","SEARCH_USERS_LOGIC","SCHEMES_END_POINT","ADD_INTERNAL_USER","ADD_EXTERNAL_USER","GET_ALL_MEETING","GET_E_ROLES","PROSPECTS_END_POINT","ADD_USERS_ENDPOINT","ADD_PROSPECTS_ENDPOINT","SEARCH_PROSPECT","ADD_NEW_LEAD","GET_INSURANCE_PRODUCTS","GET_A_SINGLE_LEAD","GET_ALL_LEADS","GET_SCHEMES_FILTER","EDIT_MEMBER","GET_SINGLE_MEMBER","GET_SINGLE_MEMBER_POLICY","GET_ALL_CLAIMS","NEW_SERVICE_PROVIDER","NEW_COUNTRY","NEW_PRODUCT","UPDATE_MEMBER","updateSingleMember","ClientID","Name","Postal_address","PINNO","Email","phone_no","date_of_birth","IDNo","occupation","physical_address","put","addNewCountry","post","addNewProduct","addNewServiceProvider","getAllCLaims","parameter","get","getSingleMember","clientid","getSingleMemberPolicy","editMember","getSchemeFilter","insurance","GET_INSURED_ITEMS_ENDPOINT","getSingleLead","saveNewLead","lead_name","date_of_contact","lead_added_by","lead_add_date","phone_number","email","note","GET_ALL_INSURANCE_MEMBERS_ENDPOINT","GET_ALL_INSURANCE_POLICIES_ENDPOINT","loginUser","username","password","saveUser","user_email","getInsuranceProducts","getAllInsuredItems","getAllCountries","getAllInsuranceMembers","getAllInsurancePolicies","getAllUsers","getAllSchemes","getAllMeetings","getExternalRoles","searchUser","getAllProducts","getAllServices","getAllServiceProviders","getALLProspects","getAllLeads","saveInsurance","country","product_category","service_category","currency_code","product_type","service_provider_ins","commission_rate","SLA","SLA_expiry_date","year_in_service","model_ins","min_age","max_age","mode_of_intergration","product_name","product_group","saveInternalUser","user_first_name","user_second_name","role","user_type","access_to","scheme_code","pensionChecked","insuranceChecked","trustChecked","actuarialChecked","trainingChecked","adminChecked","approverChecked","supervisorChecked","memberChecked","saveExternalUser","saveProspects","type","business","product_or_service","business_value","valuation_basis","lead_selected","searchProspect"],"mappings":"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","sourcesContent":["import httpClient from './httpClient';\n\n//authentication endpoints\nconst LOGIN_END_POINT = '/users/login?';\n const SETTINGS_END_POINT = '/systemsettings/add';\n\n\n//insurance endpoints\nconst COUNTRIES_INSURANCE_END_POINT = '/countries';\nconst PRODUCT_INSURANCE_CATEGORY_END_POINT = '/products';\nconst SERVICE_INSURANCE_CATEGORY_END_POINT = '/services';\nconst SERVICE_INSURANCE_PROVIDER_END_POINT = '/service_provider_osl';\nconst SAVE_INSURANCE_END_POINT = '/master?';\nconst ALL_USERS_END_POINT = '/users?';\nconst SEARCH_USERS_LOGIC = '/users/singleusers?';\nconst SCHEMES_END_POINT = '/schemes/allschemes';\nconst ADD_INTERNAL_USER = '/users/internal/add?';\nconst ADD_EXTERNAL_USER = '/users/external/add?';\nconst GET_ALL_MEETING = '/meetings';\nconst GET_E_ROLES = '/roles/external';\nconst PROSPECTS_END_POINT='/prospects';\nconst ADD_USERS_ENDPOINT = '/users/add?';\nconst ADD_PROSPECTS_ENDPOINT = '/prospects/add?';\nconst SEARCH_PROSPECT = '/prospect/single_prospect?';\nconst ADD_NEW_LEAD = '/leads/add?';\nconst GET_INSURANCE_PRODUCTS = '/product_settings';\nconst GET_A_SINGLE_LEAD = '/lead';\nconst GET_ALL_LEADS = '/leads';\nconst GET_SCHEMES_FILTER = '/scheme?';\nconst EDIT_MEMBER = '/';\nconst GET_SINGLE_MEMBER = '/members/{ClientID}?';\nconst GET_SINGLE_MEMBER_POLICY = '/members/policies/{ClientID}?';\nconst GET_ALL_CLAIMS = '/claims?';\nconst NEW_SERVICE_PROVIDER = '/';\nconst NEW_COUNTRY = '/';\nconst NEW_PRODUCT = '/';\nconst UPDATE_MEMBER = '/members/update/{ClientID}?';\n\n\nconst updateSingleMember = (\n    ClientID,\n    Name,\n    Postal_address,\n    PINNO,\n    Email,\n    phone_no,\n    date_of_birth,\n    IDNo,\n    occupation,\n    physical_address\n) => httpClient.put(UPDATE_MEMBER +\n    `ClientID=${ClientID}&\n    Name=${Name}&\n    Postal_address=${Postal_address}&\n    PINNO=${PINNO}&\n    Email=${Email}&\n    phone_no=${phone_no}&\n    date_of_birth=${date_of_birth}&\n    IDNo=${IDNo}&\n    occupation=${occupation}&\n    physical_address=${physical_address}`);\nconst addNewCountry = () => httpClient.post(NEW_COUNTRY);\nconst addNewProduct = () => httpClient.post(NEW_PRODUCT);\nconst addNewServiceProvider = () => httpClient.post(NEW_SERVICE_PROVIDER);\nconst getAllCLaims = (parameter) => httpClient.get(GET_ALL_CLAIMS+`claim_status=${parameter}`);\nconst getSingleMember = (clientid) => httpClient.get(GET_SINGLE_MEMBER + `ClientID=${clientid}`);\nconst getSingleMemberPolicy = (clientid) => httpClient.get(GET_SINGLE_MEMBER_POLICY+`ClientID=${clientid}`);\nconst editMember = () => httpClient.put(EDIT_MEMBER);\nconst getSchemeFilter = (insurance) => httpClient.get(GET_SCHEMES_FILTER+\n    `division=${insurance}`);\nconst GET_INSURED_ITEMS_ENDPOINT = '/insured_items';\n\nconst getSingleLead = () => httpClient.get(GET_A_SINGLE_LEAD);\nconst saveNewLead = (\n    lead_name,\n    physical_address,\n    date_of_contact,\n    lead_added_by,\n    lead_add_date,\n    phone_number,\n    email,\n    note\n) => httpClient.post(ADD_NEW_LEAD+\n    `lead_name=${lead_name}&\n    physical_address=${physical_address}&\n    date_of_contact=${date_of_contact}&\n    created_by=${lead_added_by}&\n    lead_add_date=${lead_add_date}&\n    phone_number=${phone_number}&\n    email=${email}&\n    note=${note}`);\nconst GET_ALL_INSURANCE_MEMBERS_ENDPOINT = '/members';\nconst GET_ALL_INSURANCE_POLICIES_ENDPOINT = '/member_policies';\nconst loginUser = (\n    username, \n    password) => httpClient.get(LOGIN_END_POINT+\n    `username=${username}&\n    password=${password}`);\nconst saveUser = () =>httpClient.post(ADD_USERS_ENDPOINT+\n    `username=${username}&\n    user_email=${user_email}&\n    password=${password}`);\nconst getInsuranceProducts = () => httpClient.get(GET_INSURANCE_PRODUCTS);\nconst getAllInsuredItems = () => httpClient.get(GET_INSURED_ITEMS_ENDPOINT);\nconst getAllCountries = () => httpClient.get(COUNTRIES_INSURANCE_END_POINT);\nconst getAllInsuranceMembers = () => httpClient.get(GET_ALL_INSURANCE_MEMBERS_ENDPOINT);\nconst getAllInsurancePolicies = () => httpClient.get(GET_SCHEMES_FILTER);\nconst getAllUsers = () => httpClient.get(ALL_USERS_END_POINT);\nconst getAllSchemes = () => httpClient.get(SCHEMES_END_POINT);\nconst getAllMeetings = () => httpClient.get(GET_ALL_MEETING);\nconst getExternalRoles = () => httpClient.get(GET_E_ROLES);\nconst searchUser = (username) => httpClient.get(SEARCH_USERS_LOGIC+`username=${username}`);\nconst getAllProducts = () => httpClient.get(PRODUCT_INSURANCE_CATEGORY_END_POINT);\nconst getAllServices = () => httpClient.get(SERVICE_INSURANCE_CATEGORY_END_POINT);\nconst getAllServiceProviders = () => httpClient.get(SERVICE_INSURANCE_PROVIDER_END_POINT);\nconst getALLProspects = () => httpClient.get(PROSPECTS_END_POINT);\nconst getAllLeads = () => httpClient.get(GET_ALL_LEADS);\nconst saveInsurance = (\n    country, \n    product_category,\n    service_category,\n    currency_code,\n    product_type,\n    service_provider_ins,\n    commission_rate,\n    SLA,\n    SLA_expiry_date,\n    year_in_service,\n    model_ins,\n    min_age,\n    max_age,\n    mode_of_intergration,\n    product_name,\n    product_group\n    ) => httpClient.post(SAVE_INSURANCE_END_POINT+\n    `country_name=${country}&\n    product_category=${product_category}&\n    service_category=${service_category}&\n    currency_code=${currency_code}&\n    product_type=${product_type}&\n    service_provider=${service_provider_ins}&\n    commission_rate=${commission_rate}&\n    SLA=${SLA}&\n    SLA_expiry_date=${SLA_expiry_date}&\n    year_in_service=${year_in_service}&\n    model=${model_ins}&\n    min_age=${min_age}&\n    max_age=${max_age}&\n    mode_of_intergration=${mode_of_intergration}&\n    product_name=${product_name}&\n    product_group=${product_group}`);\n\nconst saveInternalUser = (\n    username,\n    user_email,\n    user_first_name,\n    user_second_name,\n    role,\n    user_type,\n    access_to,\n    scheme_code,\n    pensionChecked,\n    insuranceChecked,\n    trustChecked,\n    actuarialChecked,\n    trainingChecked,\n    adminChecked,\n    approverChecked,\n    supervisorChecked,\n    memberChecked\n) => httpClient.post(ADD_INTERNAL_USER+\n    `username=${username}&\n    user_email=${user_email}&\n    user_first_name=${user_first_name}&\n    user_second_name=${user_second_name}&\n    role=${role}&\n    user_type=${user_type}&\n    access_to=${access_to}&\n    scheme_code=${scheme_code}&\n    pensionChecked=${pensionChecked}&\n    insuranceChecked=${insuranceChecked}&\n    trustChecked=${trustChecked}&\n    actuarialChecked=${actuarialChecked}&\n    trainingChecked=${trainingChecked}&\n    adminChecked=${adminChecked}&\n    approverChecked=${approverChecked}&\n    supervisorChecked=${supervisorChecked}&\n    memberChecked=${memberChecked}`);\n\nconst saveExternalUser = () => httpClient.post(ADD_EXTERNAL_USER);\nconst saveProspects = (\n    type,\n    business,\n    product_or_service,\n    business_value,\n    valuation_basis,\n    lead_selected,\n) => httpClient.post(ADD_PROSPECTS_ENDPOINT+\n    `type=${type}&\n    business=${business}&\n    product_or_service=${product_or_service}&\n    business_value=${business_value}&\n    valuation_basis=${valuation_basis}&\n    lead_selected=${lead_selected}`);\nconst searchProspect = () => httpClient.get(SEARCH_PROSPECT);\n\n\nexport {\n    loginUser,\n    getAllCountries,\n    getAllProducts,\n    getAllServices,\n    getAllServiceProviders,\n    saveInsurance,\n    getAllUsers,\n    searchUser,\n    getAllSchemes,\n    saveInternalUser,\n    saveExternalUser,\n    getAllMeetings,\n    getExternalRoles,\n    getALLProspects,\n    saveUser,\n    saveProspects,\n    searchProspect,\n    saveNewLead,\n    getInsuranceProducts,\n    getSingleLead,\n    getAllLeads,\n    getAllInsuranceMembers,\n    getAllInsurancePolicies,\n    getSchemeFilter,\n    getAllInsuredItems,\n    editMember,\n    getSingleMember,\n    getAllCLaims,\n    addNewServiceProvider,\n    addNewCountry,\n    addNewProduct,\n    updateSingleMember,\n    getSingleMemberPolicy,\n}"]}]}